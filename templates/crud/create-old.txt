<template>
<v-row justify="center">
    <v-col
        cols="12"
        sm="10"
        md="8"
        lg="6"
    >
        <v-card flat class="pa-16">
            <v-card-text v-if="isLoading">
                <v-skeleton-loader
                    type="card-avatar, article, actions"
                >
                </v-skeleton-loader>
            </v-card-text>
            <v-card-text v-if="!isLoading" >
                <v-row>
                {{#feilds}}
                    {{#isString}}
                    <v-col cols="12" sm="12" md="12" >
                        <v-text-field
                            label="{{feildName}}"
                            outlined
                            v-model="form.{{feildName}}"
                            dense
                        ></v-text-field>
                    </v-col>
                    {{/isString}}
                    {{#isDate}}
                    <v-col cols="12" sm="12" md="12" >
                        <v-menu
                            v-model="open{{feildName}}DatePicker"
                            :close-on-content-click="false"
                            :nudge-right="40"
                            transition="scale-transition"
                            offset-y
                            min-width="auto"
                        >
                            <template v-slot:activator="{ on, attrs }">
                                <v-text-field
                                    outlined
                                    dense
                                    v-model="form.{{feildName}}"
                                    label="{{feildName}} Date"
                                    readonly
                                    v-bind="attrs"
                                    v-on="on"
                                ></v-text-field>
                            </template>
                            <v-date-picker
                                v-model="form.{{feildName}}"
                                @input="open{{feildName}}DatePicker = false"
                            ></v-date-picker>
                        </v-menu>
                    </v-col>
                    {{/isDate}}
                    {{#isNumber}}
                    <v-col cols="12" sm="12" md="12" >
                        {{feildName}}
                    </v-col>
                    {{/isNumber}}
                    {{#isBool}}
                    <v-col cols="12" sm="12" md="12" >
                        <v-switch
                            v-model="form.{{feildName}}"
                            label="{{feildName}}"
                            :color="form.{{feildName}} ? 'green' : 'red'"
                        ></v-switch>
                    </v-col>
                    {{/isBool}}
                    {{#BelongsTo}}
                    <v-col cols="12" sm="12" md="12" >
                        <v-autocomplete
                            v-model="form.{{feildName}}"
                                :items="{{hasManyTableName}}"
                                outlined
                                chips
                                color="blue-grey lighten-2"
                                label="{{BelongsToModelName}}"
                                item-text="{{BelongsToModelAttribute}}"
                                item-value="id"
                                dense
                            >
                            <template v-slot:selection="data">
                                <v-chip
                                    class="clickable"
                                    v-bind="data.attrs"
                                    :input-value="data.selected"
                                    close
                                    small
                                    @click="removeFromSelected{{modelName}}(data.item)"
                                >
                                    {{ data.item.{{BelongsToModelAttribute}} }}
                                </v-chip>
                            </template>
                            <template v-slot:item="data">
                                <template>
                                    <v-list-item-content v-text="data.item.{{BelongsToModelAttribute}}"></v-list-item-content>
                                </template>
                            </template>
                        </v-autocomplete>
                    </v-col>
                    {{/BelongsTo}}
                {{/feilds}}
                </v-row>
            </v-card-text>
            <v-divider class="mt-12"></v-divider>
            <v-card-actions>
                <v-btn 
                    text
                    @click="Cancel"
                >
                    Cancel
                </v-btn>
                <v-spacer></v-spacer>
                <v-btn
                    color="primary"
                    text
                    @click="submit"
                >
                    Submit
                </v-btn>
            </v-card-actions>
        </v-card>
    </v-col>
</v-row>
</template>

<script>
import { mapActions, mapGetters } from 'vuex'
export default {
    data: () => ({
        form: {
            {{#feilds}}
            {{#isString}}
            {{feildName}}: null,
            {{/isString}}
            {{#isDate}}
            {{feildName}}: null,
            {{/isDate}}
            {{#isNumber}}
            {{feildName}}: null,
            {{/isNumber}}
            {{#isBool}}
            {{feildName}}: false,
            {{/isBool}}
            {{#BelongsTo}}
            {{feildName}}: null,
            {{/BelongsTo}}
            {{/feilds}}
        },
        {{#feilds}}
        {{#isDate}}
        open{{feildName}}DatePicker: false,
        {{/isDate}}
        {{/feilds}}
        isLoading: true,
    }),
    computed: {
        {{#belongsToModels}}
        ...mapGetters("{{modelName}}", ["GET_{{getter}}"]),
        {{/belongsToModels}}
    },
    methods: {
        ...mapActions("{{modelName}}", ["create"]),
        {{#belongsToModels}}
        ...mapActions("{{modelName}}", ["index"]),
        {{/belongsToModels}}
        async submit () {
            this.isLoading = true

            await this.create(this.form)

            this.$router.push('/{{resourceName}}/index')

            this.isLoading = false
        },
        async Cancel () {
            this.form = {
                {{#feilds}}
                {{#isString}}
                {{feildName}}: null,
                {{/isString}}
                {{#isDate}}
                {{feildName}}: null,
                {{/isDate}}
                {{#isNumber}}
                {{feildName}}: null,
                {{/isNumber}}
                {{#isBool}}
                {{feildName}}: false,
                {{/isBool}}
                {{#BelongsTo}}
                {{feildName}}: null,
                {{/BelongsTo}}
                {{/feilds}}
            }
        },
        {{#belongsToModels}}
        removeFromSelected{{modelName}} (item) {
            const index = this.form.{{hasmanyRelationName}}.indexOf(item.id)
            if (index >= 0) this.form.{{hasmanyRelationName}}.splice(index, 1)
        },
        {{/belongsToModels}}
    },
    created(){
        this.isLoading = true

        {{#belongsToModels}}
        await this.index()

        this.form.{{hasmanyRelationName}} = this.GET_{{getter}}
        {{/belongsToModels}}

        this.isLoading = false
    }
}
</script>